[{"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/state.ts":"1","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/currencyReducer.ts":"2","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/components/CurrencyExchange/CurrencyExchange.tsx":"3","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/App.tsx":"4","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/actions.ts":"5","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx":"6","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/index.tsx":"7","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/selectors.ts":"8","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/lessons/lesson2/lesson2.ts":"9","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/lessons/lesson5/lesson5.ts":"10"},{"size":286,"mtime":1609751766000,"results":"11","hashOfConfig":"12"},{"size":1988,"mtime":1640034002659,"results":"13","hashOfConfig":"12"},{"size":3871,"mtime":1609757734000,"results":"14","hashOfConfig":"12"},{"size":619,"mtime":1642625546280,"results":"15","hashOfConfig":"12"},{"size":1489,"mtime":1640033720926,"results":"16","hashOfConfig":"12"},{"size":4928,"mtime":1640039401957,"results":"17","hashOfConfig":"12"},{"size":319,"mtime":1609752860000,"results":"18","hashOfConfig":"12"},{"size":107,"mtime":1640039353789,"results":"19","hashOfConfig":"12"},{"size":5631,"mtime":1640522158685,"results":"20","hashOfConfig":"12"},{"size":5604,"mtime":1642626611788,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u8sooc",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/state.ts",[],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/currencyReducer.ts",[],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/components/CurrencyExchange/CurrencyExchange.tsx",[],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/App.tsx",["43"],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/actions.ts",[],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx",["44","45","46"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\nimport {selectFullState} from \"../../redux/selectors\";\r\n\r\n//const CurrencyEContainer: React.FC<TProps> = props => {\r\n//Пропсы не нужны, будем использовать useSelector\r\nconst CurrencyEContainer: React.FC = () => {\r\n\r\n    /*    const {\r\n            currencies,\r\n            currentCurrency,\r\n            isBuying,\r\n            amountOfBYN,\r\n            amountOfCurrency,\r\n            setCurrencyAmount,\r\n            setAction,\r\n            changeCurrency,\r\n        } = props;*/\r\n\r\n/*    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = props;*/\r\n\r\n\r\n\r\n    const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>()\r\n    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency,\r\n    } = useSelector(selectFullState);\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true) ): dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({currency}: { currency: CurrencyState }): CurrencyState => {\r\n    return {\r\n        currencies: currency.currencies,\r\n        currentCurrency: currency.currentCurrency,\r\n        isBuying: currency.isBuying,\r\n        amountOfBYN: currency.amountOfBYN,\r\n        amountOfCurrency: currency.amountOfCurrency,\r\n    };\r\n};\r\n\r\n//Записали сокращённым методом, добавив объект в connect\r\n/*\r\nconst mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>): any => {\r\n    return {\r\n        setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n            dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n        },\r\n        setAction(isBuying: boolean) {\r\n            dispatch(ChangeActionAC(isBuying));\r\n        },\r\n        changeCurrency(currency: string) {\r\n            dispatch(ChangeCurrentCurrencyAC(currency));\r\n        },\r\n    };\r\n};\r\n*/\r\n\r\n\r\n//const connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n/*const connector = connect(mapStateToProps, {\r\n    ChangeCurrencyFieldAC,\r\n    ChangeActionAC,\r\n    ChangeCurrentCurrencyAC,\r\n});*/\r\n\r\n\r\n/*const connector = connect(mapStateToProps, {});\r\ntype TProps = ConnectedProps<typeof connector>;*/\r\n\r\n/*type TProps = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CurrencyEContainer);*/\r\n\r\nexport default CurrencyEContainer;\r\n\r\n","/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/index.tsx",[],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/redux/selectors.ts",[],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/lessons/lesson2/lesson2.ts",["47"],"/home/fabskrejt/project/it_inkubator_1/nativ-js-wed2/src/lessons/lesson5/lesson5.ts",["48","49","50","51"],{"ruleId":"52","severity":1,"message":"53","line":3,"column":9,"nodeType":"54","messageId":"55","endLine":3,"endColumn":16},{"ruleId":"52","severity":1,"message":"56","line":11,"column":9,"nodeType":"54","messageId":"55","endLine":11,"endColumn":16},{"ruleId":"52","severity":1,"message":"57","line":11,"column":18,"nodeType":"54","messageId":"55","endLine":11,"endColumn":32},{"ruleId":"52","severity":1,"message":"58","line":101,"column":7,"nodeType":"54","messageId":"55","endLine":101,"endColumn":22},{"ruleId":"59","severity":1,"message":"60","line":179,"column":1,"nodeType":"61","endLine":180,"endColumn":3},{"ruleId":"52","severity":1,"message":"62","line":88,"column":5,"nodeType":"54","messageId":"55","endLine":88,"endColumn":8},{"ruleId":"52","severity":1,"message":"63","line":89,"column":5,"nodeType":"54","messageId":"55","endLine":89,"endColumn":8},{"ruleId":"52","severity":1,"message":"64","line":101,"column":10,"nodeType":"54","messageId":"55","endLine":101,"endColumn":23},{"ruleId":"59","severity":1,"message":"60","line":113,"column":1,"nodeType":"61","endLine":113,"endColumn":25},"@typescript-eslint/no-unused-vars","'Lesson1' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'mapStateToProps' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'One' is assigned a value but never used.","'Two' is assigned a value but never used.","'sumTwoNumbers' is defined but never used."]